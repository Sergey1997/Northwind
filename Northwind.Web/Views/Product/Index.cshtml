@using Northwind.Web.Helpers;
@model PaginatedList<Northwind.DataAccess.Models.Products>

@{
    ViewBag.Title = "Product";
}

<h2>Products</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Product", FormMethod.Get))
{

}
<table class="table">
    <tr>
        <th>
            Product ID
        </th>
        <th>
            Product Name
        </th>
        <th>
            Category Name
        </th>
        <th>
            Supplier Name
        </th>
        <th>
            UnitPrice
        </th>
        <th>
            UnitsInStock
        </th>
        <th>
            UnitsOnOrder
        </th>
        <th>
            ReorderLevel
        </th>
        <th>
            Discontinued
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsOnOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReorderLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discontinued)
            </td>
            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ProductId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductId })
                </td>*@
        </tr>
    }

</table>
<br />
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-page="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-page="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
